{"name":"vue-mugen-scroll","version":"0.2.1","description":"Infinite scroll component for Vue.js","license":"MIT","repository":{"type":"git","url":"git+https://github.com/egoist/vue-mugen-scroll.git"},"author":{"name":"EGOIST","email":"0x142857@gmail.com","url":"github.com/egoist"},"engines":{"node":">=4"},"scripts":{"test":"eslint src/*.js","example":"vbuild --dev --config vue.config.example.js","example:build":"vbuild --config vue.config.example.js","gh":"npm run example:build && gh-pages -d dist-example","build":"bili --format umd --format cjs --module-name MugenScroll --compress"},"files":["dist"],"main":"dist/vue-mugen-scroll.common.js","keywords":["vue","infinite scroll","scroll","infinite","ui","component"],"devDependencies":{"axios":"^0.15.2","bili":"^0.6.3","eslint":"latest","eslint-config-egoist":"latest","gh-pages":"^0.11.0","jest-cli":"^15.1.1","text-spinners":"^1.0.1","vue":"^2.0.3"},"jest":{"testEnvironment":"node"},"eslintConfig":{"extends":"egoist/esnext-browser"},"dependencies":{"lodash.throttle":"^4.1.1"},"readme":"# vue-mugen-scroll [![NPM version](https://img.shields.io/npm/v/vue-mugen-scroll.svg?style=flat-square)](https://npmjs.com/package/vue-mugen-scroll) [![NPM downloads](https://img.shields.io/npm/dm/vue-mugen-scroll.svg?style=flat-square)](https://npmjs.com/package/vue-mugen-scroll) [![Build Status](https://img.shields.io/circleci/project/egoist/vue-mugen-scroll/master.svg?style=flat-square)](https://circleci.com/gh/egoist/vue-mugen-scroll)\n\n**むげん [mugen]** means Infinity in English.\n\n## Features\n\n- Small, only weighs 2kb\n- Insanely easy to use, it's just a component with a couple props\n\n## Install\n\n```bash\n$ npm install --save vue-mugen-scroll\n```\n\n## Usage\n\n```vue\n<template>\n  <div id=\"app\">\n    <div class=\"list\">your list of items</div>\n    <!-- add the component right after your list -->\n    <mugen-scroll :handler=\"fetchData\" :should-handle=\"!loading\">\n      loading...\n    </mugen-scroll>\n  </div>\n</template>\n\n<script>\n  import MugenScroll from 'vue-mugen-scroll'\n  export default {\n    data() {\n      // do not run handler when it's loading\n      return {loading: false}\n    },\n    methods: {\n      fetchData() {\n        this.loading = true\n        // ... the code you wanna run to fetch data\n        this.loading = false\n      }\n    },\n    components: {MugenScroll}\n  }\n</script>\n```\n\n## API\n\n### props\n\n#### handler\n\nType: `function`<br>\nRequired: `true`\n\nThe handler function to run after you scroll to the bottom of the list. It will also be invoked on component mounted and the `mugen-scroll` component is visible in viewport.\n\n#### handleOnMount\n\nType: `boolean`<br>\nDefault: `true`\n\nInvoke the handler function on component mounted.\n\n#### shouldHandle\n\nType: `boolean`<br>\nDefault: `true`\n\nAdd an addtional condition to check if it should invoke the handler function, for example you don't want it to be invoked again as it's loading.\n\n#### threshold\n\nType: `number`<br>\nDefault: `0`\n\nSet the ratio of the `<mugen-scroll>`'s height and width that needs to be visible for it to be considered in viewport. This defaults to 0, meaning any amount. A threshold of 0.5 or 1 will require that half or all, respectively, of the element's height and width need to be visible. threshold must be a number between 0 and 1\n\n#### scrollConatiner\n\nType: `string`\n\nIf the container of your list is scrollable, you can specific the reference ID of the container, so that we can detect the `scroll` event of this element instead of `window`.\n\n```vue\n<template>\n  <div class=\"wrap\"\n    <!-- the container is scrollable here -->\n    style=\"height: 200px; overflow: auto;\"\n    <!-- add the ref -->\n    ref=\"wrap\">\n    <div class=\"list\"><!-- your list --></div>\n    <mugen-scroll\n      <!-- pass the ref id -->\n      scroll-container=\"wrap\">\n      Loading...\n    </mugen-scroll>\n  </div>\n</template>\n```\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n\n[MIT](https://egoist.mit-license.org/) © [EGOIST](https://github.com/egoist)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/egoist/vue-mugen-scroll/issues"},"homepage":"https://github.com/egoist/vue-mugen-scroll#readme","_id":"vue-mugen-scroll@0.2.1","_shasum":"9b032dbf6269c59b4a83f44fa782f56ff9088e8b","_resolved":"https://registry.npmjs.org/vue-mugen-scroll/-/vue-mugen-scroll-0.2.1.tgz","_from":"https://registry.npmjs.org/vue-mugen-scroll/-/vue-mugen-scroll-0.2.1.tgz"}