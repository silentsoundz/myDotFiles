{"name":"timed-out","version":"3.1.3","description":"Emit `ETIMEDOUT` or `ESOCKETTIMEDOUT` when ClientRequest is hanged","license":"MIT","repository":{"type":"git","url":"git+https://github.com/floatdrop/timed-out.git"},"author":{"name":"Vsevolod Strukchinsky","email":"floatdrop@gmail.com"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && mocha"},"files":["index.js"],"keywords":["http","https","get","got","url","uri","request","util","utility","simple"],"devDependencies":{"mocha":"*","xo":"^0.16.0"},"readme":"# timed-out [![Build Status](https://travis-ci.org/floatdrop/timed-out.svg?branch=master)](https://travis-ci.org/floatdrop/timed-out)\n\n> Timeout HTTP/HTTPS requests\n\nEmit Error object with `code` property equal `ETIMEDOUT` or `ESOCKETTIMEDOUT` when ClientRequest is hanged.\n\n## Usage\n\n```js\nvar get = require('http').get;\nvar timeout = require('timed-out');\n\nvar req = get('http://www.google.ru');\ntimeout(req, 2000); // Set 2 seconds limit\n```\n\n### API\n\n#### timedout(request, time)\n\n##### request\n\n*Required*  \nType: [`ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest)\n\nThe request to watch on.\n\n##### time\n\n*Required*  \nType: `number` or `object`\n\nTime in milliseconds to wait for `connect` event on socket and also time to wait on inactive socket.\n\nOr you can pass Object with following fields:\n\n- `connect` - time to wait for connection\n- `socket`  - time to wait for activity on socket\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](floatdrop@gmail.com)\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/floatdrop/timed-out/issues"},"homepage":"https://github.com/floatdrop/timed-out#readme","_id":"timed-out@3.1.3","_shasum":"95860bfcc5c76c277f8f8326fd0f5b2e20eba217","_resolved":"https://registry.npmjs.org/timed-out/-/timed-out-3.1.3.tgz","_from":"https://registry.npmjs.org/timed-out/-/timed-out-3.1.3.tgz"}