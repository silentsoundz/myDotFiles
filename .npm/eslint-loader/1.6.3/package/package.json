{"name":"eslint-loader","version":"1.6.3","description":"eslint loader (for webpack)","keywords":["lint","linter","eslint","loader","webpack"],"repository":{"type":"git","url":"git+https://github.com/MoOx/eslint-loader.git"},"author":{"name":"Maxime Thirouin"},"license":"MIT","files":["index.js"],"peerDependencies":{"eslint":">=1.6.0 <4.0.0"},"dependencies":{"find-cache-dir":"^0.1.1","loader-utils":"^1.0.2","object-assign":"^4.0.1","object-hash":"^1.1.4"},"devDependencies":{"ava":"^0.17.0","eslint":"^3.0.0","eslint-friendly-formatter":"^2.0.4","npmpub":"^3.0.1","webpack":"^2.2.0"},"scripts":{"lint":"eslint .","ava":"ava","test":"npm run lint && npm run ava","release":"npmpub"},"ava":{"files":["test/*.js"],"verbose":true},"readme":"# eslint-loader [![Build Status](http://img.shields.io/travis/MoOx/eslint-loader.svg)](https://travis-ci.org/MoOx/eslint-loader)\n\n> eslint loader for webpack\n\n## Install\n\n```console\n$ npm install eslint-loader --save-dev\n```\n\n## Usage\n\nIn your webpack configuration\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          // eslint options (if necessary)\n        }\n      },\n    ],\n  },\n  // ...\n}\n```\n\nWhen using with transpiling loaders (like `babel-loader`), make sure they are in correct order\n(bottom to top). Otherwise files will be check after being processed by `babel-loader`\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          \"babel-loader\",\n          \"eslint-loader\",\n        ],\n      },\n    ],\n  },\n  // ...\n}\n```\n\nTo be safe, you can use `enforce: \"pre\"` section to check source files, not modified\nby other loaders (like `babel-loader`)\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        enforce: \"pre\",\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"babel-loader\",\n      },\n    ],\n  },\n  // ...\n}\n```\n\n### Options\n\nYou can pass [eslint options](http://eslint.org/docs/developer-guide/nodejs-api#cliengine)\nusing standard webpack [loader options](https://webpack.js.org/configuration/module/#useentry).\n\nNote that the config option you provide will be passed to the `CLIEngine`.\nThis is a different set of options than what you'd specify in `package.json` or `.eslintrc`.\nSee the [eslint docs](http://eslint.org/docs/developer-guide/nodejs-api#cliengine) for more detail.\n\n#### `fix` (default: false)\n\nThis option will enable\n[ESLint autofix feature](http://eslint.org/docs/user-guide/command-line-interface#fix).\n\n**Be careful: this option might cause webpack to enter an infinite build loop if\nsome issues cannot be fixed properly.**\n\n#### `cache` (default: false)\n\nThis option will enable caching of the linting results into a file.\nThis is particularly useful in reducing linting time when doing a full build.\n\nThe cache file is written to the `./node_modules/.cache` directory, thanks to the usage\nof the [find-cache-dir](https://www.npmjs.com/package/find-cache-dir) module.\n\n#### `formatter` (default: eslint stylish formatter)\n\nLoader accepts a function that will have one argument: an array of eslint messages (object).\nThe function must return the output as a string.\nYou can use official eslint formatters.\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          // several examples !\n\n          // default value\n          formatter: require(\"eslint/lib/formatters/stylish\"),\n\n          // community formatter\n          formatter: require(\"eslint-friendly-formatter\"),\n\n          // custom formatter\n          formatter: function(results) {\n            // `results` format is available here\n            // http://eslint.org/docs/developer-guide/nodejs-api.html#executeonfiles()\n\n            // you should return a string\n            // DO NOT USE console.*() directly !\n            return \"OUTPUT\"\n          }\n        }\n      },\n    ],\n  },\n}\n```\n\n#### Errors and Warning\n\n**By default the loader will auto adjust error reporting depending\non eslint errors/warnings counts.**\nYou can still force this behavior by using `emitError` **or** `emitWarning` options:\n\n##### `emitError` (default: `false`)\n\nLoader will always return errors if this option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          emitError: true,\n        }\n      },\n    ],\n  },\n}\n```\n\n##### `emitWarning` (default: `false`)\n\nLoader will always return warnings if option is set to `true`.\n\n#### `quiet` (default: `false`)\n\nLoader will process and report errors only and ignore warnings if this option is set to true\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          quiet: true,\n        }\n      },\n    ],\n  },\n}\n```\n\n##### `failOnWarning` (default: `false`)\n\nLoader will cause the module build to fail if there are any eslint warnings.\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          failOnWarning: true,\n        }\n      },\n    ],\n  },\n}\n```\n\n##### `failOnError` (default: `false`)\n\nLoader will cause the module build to fail if there are any eslint errors.\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          failOnError: true,\n        }\n      },\n    ],\n  },\n}\n```\n\n##### `outputReport` (default: `false`)\nWrite the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI\n\nThe `filePath` is relative to the webpack config: output.path\nYou can pass in a different formatter for the output file, if none is passed in the default/configured formatter will be used\n\n```js\nmodule.exports = {\n  entry: \"...\",\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: \"eslint-loader\",\n        options: {\n          outputReport: {\n            filePath: 'checkstyle.xml',\n            formatter: require('eslint/lib/formatters/checkstyle')\n          }\n        }\n      },\n    ],\n  },\n}\n```\n\n\n## Gotchas\n\n### NoErrorsPlugin\n\n`NoErrorsPlugin` prevents Webpack from outputting anything into a bundle. So even ESLint warnings\nwill fail the build. No matter what error settings are used for `eslint-loader`.\n\nSo if you want to see ESLint warnings in console during development using `WebpackDevServer`\nremove `NoErrorsPlugin` from webpack config.\n\n### Defining `configFile` or using `eslint -c path/.eslintrc`\n\nBear in mind that when you define `configFile`, `eslint` doesn't automatically look for\n`.eslintrc` files in the directory of the file to be linted.\nMore information is available in official eslint documentation in section [_Using Configuration Files_](http://eslint.org/docs/user-guide/configuring#using-configuration-files).\nSee [#129](https://github.com/MoOx/eslint-loader/issues/129).\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/MoOx/eslint-loader/issues"},"homepage":"https://github.com/MoOx/eslint-loader#readme","_id":"eslint-loader@1.6.3","_shasum":"52fdcb32e9e8355108f8380dad4efe51a28986f9","_resolved":"https://registry.npmjs.org/eslint-loader/-/eslint-loader-1.6.3.tgz","_from":"https://registry.npmjs.org/eslint-loader/-/eslint-loader-1.6.3.tgz"}