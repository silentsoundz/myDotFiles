{"name":"sinon-stub-promise","version":"4.0.0","description":"Synchronous Promise stubbing for Sinon.JS","author":{"name":"Alex May","email":"alex@substantial.com"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/substantial/sinon-stub-promise.git"},"engines":{"node":">= 0.10"},"main":"index.js","scripts":{"test":"mocha spec"},"devDependencies":{"chai":"^2.3.0","mocha":"^2.1.0","rsvp":"^3.0.16","sinon":"^1.12.2"},"readme":"# sinon-stub-promise\n[![Build Status](https://travis-ci.org/substantial/sinon-stub-promise.svg?branch=master)](https://travis-ci.org/substantial/sinon-stub-promise)\n\nThis is a little package that makes testing of promises easier when stubbing\nwith [Sinon.JS](http://sinonjs.org/). This library ensures stubbed promises are\nevaluated synchronously, so that no special async tricks are required for\ntesting.\n\n## Installation\n\nInstall with npm: `npm install --save-dev sinon-stub-promise`\n\nIn node, you can initialize with sinon:\n\n```javascript\nvar sinon = require('sinon');\nvar sinonStubPromise = require('sinon-stub-promise');\nsinonStubPromise(sinon);\n```\n\nOr in the browser, you can just include\n`node_modules/sinon-stub-promise/index.js` (assumes sinon is available on\nwindow object).\n\n## Example\n\n```javascript\n// Code under test\nfunction doSomethingWithAPromise(promise, object) {\n  promise()\n    .then(function(value) {\n      // resolves\n      object.resolved = value\n    })\n    .catch(function(value) {\n      // rejects\n      object.rejected = value\n    });\n}\n\n// Test\ndescribe('stubbing a promise', function() {\n  var promise;\n\n  beforeEach(function() {\n    promise = sinon.stub().returnsPromise();\n  });\n\n  it('can resolve', function() {\n    promise.resolves('resolve value')\n\n    var testObject = {};\n    doSomethingWithAPromise(promise, testObject);\n    expect(testObject.resolved).to.eql('resolve value');\n  });\n\n  it('can reject', function() {\n    promise.rejects('reject value')\n\n    var testObject = {};\n    doSomethingWithAPromise(promise, testObject);\n    expect(testObject.rejected).to.eql('reject value');\n  });\n}\n```\n\n## Why?\n\nWe wanted a nice synchronous way of stubbing out promises while testing, and\nthe existing solution,\n[sinon-as-promised](https://www.npmjs.com/package/sinon-as-promised), uses a\npromise under the hood to achieve the stubbing. The issue with this, is that\nthe promise is evaluated asynchronously, so the test code has to deal with that\nby delaying the assertion until the promise has a chance to run.\n\nAdditionally, sinon-as-promised requires you to call either `stub.resolves()`\nor `stub.rejects()` before it will setup the stub as a \"thenable\" object (one\nthat has `then` and `catch` on it). The trouble with this is that if you are\ntesting conditional branches (e.g. test what happens when promise succeeds,\nthen test what happens when promise fails), you have to either resolve or\nreject the promise for the code under test to pass.\n\n## Usage with Karma\n\nIn order to use this with the [Karma](http://karma-runner.github.io/) test runner\nyou can either add `node_modules/sinon-stub-promise/index.js` to `files` in your config or, alternatively, use the\n[karma-sinon-stub-promise](https://github.com/alexweber/karma-sinon-stub-promise) plugin.\n\n## Stability?\n\nThis is not a [Promises/A+](https://promisesaplus.com/) compliant library. We\nbuilt it to support how we are currently using promises. There is a test suite\nthat will grow over time as we identify any short comings of this library.\n\n## To Do\n\n* Allow for chaining with `withArgs`. Ideally we could do things like `sinon.stub().withArgs(42).resolves('value')`.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/substantial/sinon-stub-promise/issues"},"homepage":"https://github.com/substantial/sinon-stub-promise#readme","_id":"sinon-stub-promise@4.0.0","_shasum":"6d498ba1198557cd01e3466af92dc7df725192c2","_resolved":"https://registry.npmjs.org/sinon-stub-promise/-/sinon-stub-promise-4.0.0.tgz","_from":"https://registry.npmjs.org/sinon-stub-promise/-/sinon-stub-promise-4.0.0.tgz"}